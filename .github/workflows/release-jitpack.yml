name: Release to JitPack

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Determine PR title for tag
        id: find_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pulls } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
            });
            if (!pulls.length) {
              console.log("No pull request found for this commit, using default tag");
              const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, 19);
              core.setOutput("tag", `v0.1.0-${timestamp}`);
              return;
            }
            const prTitle = pulls[0].title.trim();
            // PR 제목을 태그로 사용하되, 특수문자 제거
            const tag = prTitle.replace(/[^a-zA-Z0-9.-]/g, '-').replace(/-+/g, '-');
            core.setOutput("tag", tag);

      - name: Create and push tag
        run: |
          TAG="${{ steps.find_pr.outputs.tag }}"
          echo "Tagging release: $TAG"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.find_pr.outputs.tag }}
          release_name: "${{ steps.find_pr.outputs.tag }}"
          body: |
            자동 생성 릴리스: ${{ steps.find_pr.outputs.tag }}
            
            이 릴리스는 JitPack을 통해 사용할 수 있습니다:
            ```gradle
            repositories {
                maven { url 'https://jitpack.io' }
            }
            
            dependencies {
                implementation 'com.github.eulji:commit-chronicle:${{ steps.find_pr.outputs.tag }}'
            }
            ```
          draft: false
          prerelease: false 