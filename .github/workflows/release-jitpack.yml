name: JitPack Release

permissions:
  contents: write

on:
  push:
    tags: [ 'v*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [8, 11, 17, 21, 24]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-jdk${{ matrix.java-version }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-jdk${{ matrix.java-version }}-
          ${{ runner.os }}-gradle-
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Test JitPack publish
      run: ./gradlew publishToMavenLocal
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.java-version == 8
      with:
        name: jar-artifacts
        path: |
          */build/libs/*.jar
          !*/build/libs/*-sources.jar
          !*/build/libs/*-javadoc.jar

  jitpack-compatibility:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Test JitPack build simulation
      run: |
        chmod +x gradlew
        ./gradlew clean
        ./gradlew publishToMavenLocal
        echo "JitPack compatibility verified"

  release:
    runs-on: ubuntu-latest
    needs: [test, jitpack-compatibility]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Check deploy token
        run: |
          if [ -z "${{ secrets.DEPLOY_TOKEN }}" ]; then
            echo "DEPLOY_TOKEN is not set. Skipping release."
            exit 1
          fi
          echo "DEPLOY_TOKEN is available. Proceeding with release."
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-release-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Final build for release
        run: ./gradlew build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: "Release ${{ steps.version.outputs.tag }}"
          body: |
            ðŸš€ ë¦´ë¦¬ìŠ¤: ${{ steps.version.outputs.tag }}
            
            ## JitPack ì‚¬ìš©ë²•
            
            ### Gradle
            ```gradle
            repositories {
                maven { url 'https://jitpack.io' }
            }
            
            dependencies {
                implementation 'com.github.hj4645:commit-chronicle:${{ steps.version.outputs.version }}'
            }
            ```
            
            ### Maven
            ```xml
            <repositories>
                <repository>
                    <id>jitpack.io</id>
                    <url>https://jitpack.io</url>
                </repository>
            </repositories>
            
            <dependencies>
                <dependency>
                    <groupId>com.github.hj4645</groupId>
                    <artifactId>commit-chronicle</artifactId>
                    <version>${{ steps.version.outputs.version }}</version>
                </dependency>
            </dependencies>
            ```
            
            ## CLI ì‚¬ìš©ë²•
            ```bash
            # alias ì„¤ì •
            alias cch="java -jar ~/.gradle/caches/modules-2/files-2.1/com.github.hj4645/commit-chronicle/${{ steps.version.outputs.version }}/*/commitchronicle-${{ steps.version.outputs.version }}.jar"
            
            # ì‚¬ìš©
            cch summarize
            cch pr
            cch settings
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }} 